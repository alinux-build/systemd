From 4f102a37187a6a25ab3db284538c06896225836e Mon Sep 17 00:00:00 2001
From: systemd team <systemd-maint@redhat.com>
Date: Tue, 10 Mar 2020 23:15:27 +0800
Subject: [PATCH] networkd: Wait for DHCPv6 before announcing link configured

[ commit 18d29550b5fbc4b0de334b8212d05decdd131f1b upstream ]
Wait until DHCPv6 has acquired an address before announcing the link
to be configured. Log the DHCPv6 lease lost event.
---
 src/network/networkd-dhcp6.c | 12 +++++++++++-
 src/network/networkd-link.c  |  3 +++
 src/network/networkd-link.h  |  1 +
 3 files changed, 15 insertions(+), 1 deletion(-)

diff --git a/src/network/networkd-dhcp6.c b/src/network/networkd-dhcp6.c
index bcfad4c..531bc55 100644
--- a/src/network/networkd-dhcp6.c
+++ b/src/network/networkd-dhcp6.c
@@ -172,7 +172,9 @@ static void dhcp6_handler(sd_dhcp6_client *client, int event, void *userdata) {
         case DHCP6_EVENT_STOP:
         case DHCP6_EVENT_RESEND_EXPIRE:
         case DHCP6_EVENT_RETRANS_MAX:
-                log_link_debug(link, "DHCPv6 event %d", event);
+                log_link_warning(link, "DHCPv6 lease lost");
+
+                link->dhcp6_configured = false;
                 break;
 
         case DHCP6_EVENT_IP_ACQUIRE:
@@ -190,6 +192,7 @@ static void dhcp6_handler(sd_dhcp6_client *client, int event, void *userdata) {
                         return;
                 }
 
+                link->dhcp6_configured = true;
                 break;
 
         default:
@@ -201,6 +204,8 @@ static void dhcp6_handler(sd_dhcp6_client *client, int event, void *userdata) {
                                          event);
                 return;
         }
+
+        link_client_handler(link);
 }
 
 static int dhcp6_configure(Link *link, int event) {
@@ -209,6 +214,8 @@ static int dhcp6_configure(Link *link, int event) {
 
         assert_return(link, -EINVAL);
 
+        link->dhcp6_configured = false;
+
         if (link->dhcp6_client) {
                 if (event != ICMP6_EVENT_ROUTER_ADVERTISMENT_MANAGED)
                         return 0;
@@ -245,6 +252,9 @@ static int dhcp6_configure(Link *link, int event) {
                         return r;
                 }
 
+                if (r == -EALREADY)
+                        link->dhcp6_configured = true;
+
                 return r;
         }
 
diff --git a/src/network/networkd-link.c b/src/network/networkd-link.c
index 0f372d8..5e05242 100644
--- a/src/network/networkd-link.c
+++ b/src/network/networkd-link.c
@@ -516,6 +516,9 @@ void link_client_handler(Link *link) {
         if (link_dhcp4_enabled(link) && !link->dhcp4_configured)
                         return;
 
+        if (link_dhcp6_enabled(link) && !link->dhcp6_configured)
+                return;
+
         if (link->state != LINK_STATE_CONFIGURED)
                 link_enter_configured(link);
 
diff --git a/src/network/networkd-link.h b/src/network/networkd-link.h
index cec158e..2b03174 100644
--- a/src/network/networkd-link.h
+++ b/src/network/networkd-link.h
@@ -69,6 +69,7 @@ struct Link {
         uint16_t original_mtu;
         unsigned dhcp4_messages;
         bool dhcp4_configured;
+        bool dhcp6_configured;
 
         sd_ipv4ll *ipv4ll;
         bool ipv4ll_address;
-- 
1.8.3.1

